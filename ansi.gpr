project ANSI is

   for Create_Missing_Dirs use "True";

   type Build_Modes is ("On_Demand",
                        "Static_Lib",
                        "Shared_Lib");

   Build_Mode : Build_Modes := External ("ANSIADA_BUILD_MODE", "On_Demand");

   case Build_Mode is
      when "On_Demand" =>
         for Main use ("ansi-demo.adb");
         for Exec_Dir use "bin";
         for Object_Dir use "obj";

      when "Static_Lib" =>
         for Library_Kind use "static-pic";
         for Library_Name use "ansiada";
         for Library_Dir  use "lib";
         for Object_Dir use "obj/static";

      when "Shared_Lib" =>
         for Library_Kind use "dynamic";
         for Library_Name use "ansiada";
         for Library_Dir  use "lib";
         for Object_Dir use "obj/shared";
   end case;

   for Source_Dirs use ("src");

   package Builder is
      for Switches ("ada") use ("-j0", "-g");
   end Builder;

   package Compiler is
      for Switches ("Ada") use
         ("-gnatwa",   --  All warnings
          "-gnatVa",   --  All validity checks
          "-gnata",    --  Assertions and contracts
          "-gnato",    --  Overflow checks
          "-O2",       --  Optimize
          "-g",        --  Debug symbols
          "-gnatn",    --  Enable inlining
          "-gnatw.X",  --  Disable warnings for No_Exception_Propagation
          "-ffunction-sections", --  Separate ELF section for each function
          "-fdata-sections");    --  Separate ELF section for each data
   end Compiler;

   package Binder is
      for Switches ("ada") use ("-Es");
   end Binder;

end ANSI;
